openapi: 3.0.1
info:
  title: Chess REST API
  description: Chess REST API.
  contact:
    email: info@programarivm.com
  version: 1.0.0
servers:
- url: https://pchess.net/api
tags:
- name: Chess API
paths:
  /download_image:
    post:
      tags:
      - Chess API
      summary: Downloads a PNG image given a FEN string.
      requestBody:
        description: FEN string
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadImageRequest'
            examples:
              fen, 200 OK:
                value:
                  fen: "r1bq1rk1/pppnn1bp/3p2p1/3Ppp2/2P1P3/2N2P2/PP2B1PP/R1BQNRK1 w - f6"
              fen, 400 Bad Request:
                value:
                  fen: "foo"
        required: true
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/DownloadImageResponse'
              examples:
                fen, 200 OK:
                  value: "Sent binary data."
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadImageResponse'
              examples:
                fen, 400 Bad Request:
                  value: null
      x-codegen-request-body-name: body
  /download_mp4:
    post:
      tags:
      - Chess API
      summary: Downloads an MP4 video given a PGN movetext.
      requestBody:
        description: PGN movetext
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadMp4Request'
            examples:
              movetext, 200 OK:
                value:
                  movetext: "1.d4 Nf6 2.c4 g6 3.Nc3 Bg7 4.e4 d6 5.Nf3 O-O 6.Be2 e5 7.O-O Nc6 8.d5 Ne7 9.Ne1 Nd7 10.f3 f5"
              movetext, 400 Bad Request:
                value:
                  movetext: "foo"
        required: true
      responses:
        200:
          description: OK
          content:
            video/mp4:
              schema:
                $ref: '#/components/schemas/DownloadMp4Response'
              examples:
                movetext, 200 OK:
                  value: "Sent binary data."
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadMp4Response'
              examples:
                movetext, 400 Bad Request:
                  value: null
      x-codegen-request-body-name: body
  /grandmaster:
    post:
      tags:
      - Chess API
      summary: Returns the PGN move that would follow the given movetext according
        to a grandmaster.
      requestBody:
        description: PGN movetext
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrandmasterRequest'
            examples:
              movetext, 200 OK:
                value:
                  movetext: "1.e4 c6 2.Nc3"
              movetext, 204 No Content:
                value:
                  movetext: "1.e5"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrandmasterResponse'
              examples:
                movetext, 200 OK:
                  value:
                    pgn: "d4"
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrandmasterResponse'
              examples:
                movetext, 204 No Content:
                  value: null
      x-codegen-request-body-name: body
  /opening:
    post:
      tags:
      - Chess API
      summary: Returns chess opening data given a set of parameters.
      requestBody:
        description: Parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpeningRequest'
            examples:
              eco, 200 OK:
                value:
                  eco: B94
              name, 200 OK:
                value:
                  name: Sicilian
              movetext, 200 OK:
                value:
                  movetext: 1.Nf3 d5 2.g3
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpeningResponse'
              examples:
                eco, 200 OK:
                  value: [
                    {
                      "eco": "B94",
                      "name": "Sicilian Defense: Najdorf Variation",
                      "movetext": "1.e4 c5 2.Nf3 d6 3.d4 cxd4 4.Nxd4 Nf6 5.Nc3 a6 6.Bg5"
                    },
                    {
                      "eco": "B94",
                      "name": "Sicilian Defense: Najdorf Variation, Ivkov Variation",
                      "movetext": "1.e4 c5 2.Nf3 d6 3.d4 cxd4 4.Nxd4 Nf6 5.Nc3 a6 6.Bg5 Nbd7 7.Bc4 Qa5 8.Qd2 e6 9.O-O-O b5 10.Bb3 Bb7 11.Rhe1 Nc5 12.e5"
                    }
                  ]
                movetext, 200 OK:
                  value: [
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack",
                      "movetext": "1.Nf3 d5 2.g3"
                    },
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack: Double Fianchetto",
                      "movetext": "1.Nf3 d5 2.g3 g6"
                    },
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack: Keres Variation",
                      "movetext": "1.Nf3 d5 2.g3 Bg4"
                    },
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack: Keres Variation",
                      "movetext": "1.Nf3 d5 2.g3 Bg4 3.Bg2 Nd7"
                    },
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack: Omega-Delta Gambit",
                      "movetext": "1.Nf3 d5 2.g3 e5"
                    },
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack: Pachman System",
                      "movetext": "1.Nf3 d5 2.g3 g6 3.Bg2 Bg7 4.O-O e5 5.d3 Ne7"
                    },
                    {
                      "eco": "A07",
                      "name": "King's Indian Attack: Sicilian Variation",
                      "movetext": "1.Nf3 d5 2.g3 c5"
                    },
                    {
                      "eco": "A08",
                      "name": "King's Indian Attack: French Variation",
                      "movetext": "1.Nf3 d5 2.g3 c5 3.Bg2 Nc6"
                    },
                    {
                      "eco": "A08",
                      "name": "King's Indian Attack: Sicilian Variation",
                      "movetext": "1.Nf3 d5 2.g3 c5 3.Bg2"
                    },
                    {
                      "eco": "A08",
                      "name": "Zukertort Opening: Gr√ºnfeld Reversed",
                      "movetext": "1.Nf3 d5 2.g3 c5 3.Bg2 Nc6 4.d4 e6 5.O-O"
                    }
                  ]
        204:
          description: No Content
          content: {}
        400:
          description: Bad Request
          content: {}
      x-codegen-request-body-name: body
  /play:
    post:
      tags:
      - Chess API
      summary: Validates the given movetext allowing to play a game.
      requestBody:
        description: Parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayRequest'
            examples:
              movetext, 200 OK:
                value:
                  movetext: "1.e4"
              movetext, 400 Bad Request:
                value:
                  movetext: "1.e4 e4"
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayResponse'
              examples:
                movetext, 200 OK:
                  value: {
                    "fen": "rnbqkbnr\/pppppppp\/8\/8\/4P3\/8\/PPPP1PPP\/RNBQKBNR b KQkq e3",
                    "isCheck": false,
                    "isMate": false,
                    "movetext": "1.e4"
                  }
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayResponse'
              examples:
                movetext, 400 Bad Request:
                  value: {
                    "message": "This move is not allowed: e4"
                  }
      x-codegen-request-body-name: body
components:
  schemas:
    DownloadImageRequest:
      type: object
      properties:
        fen:
          type: string
    DownloadImageResponse:
      type: string
      format: binary
    DownloadMp4Request:
      type: object
      properties:
        movetext:
          type: string
    DownloadMp4Response:
      type: string
      format: binary
    GrandmasterRequest:
      type: object
      properties:
        movetext:
          type: string
    GrandmasterResponse:
      type: object
      properties:
        movetext:
          type: string
    OpeningRequest:
      type: object
      properties:
        eco:
          type: string
        name:
          type: string
        movetext:
          type: string
    OpeningResponse:
      type: array
      items:
        type: object
    PlayRequest:
      type: object
      properties:
        movetext:
          type: string
    PlayResponse:
      type: object
      properties:
        movetext:
          type: string
